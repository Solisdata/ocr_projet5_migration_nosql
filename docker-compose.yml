# Configuration Docker pour l'environnement de travail

services:
  mongo:
    image: mongo:6.0   # image officielle MongoDB
    container_name: my_mongo_new
    restart: "no"
    command: ["--auth"]
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASS}
      MONGO_INITDB_DATABASE: ${DB_NAME}
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - ./setup/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - my_network

  app:
    build:
      context : .
      dockerfile: setup/Dockerfile
    container_name: healthcare_app_new
    restart: "no"
    networks:
      - my_network
    environment:
      - MONGO_ROOT_USER=${MONGO_ROOT_USER}
      - MONGO_ROOT_PASS=${MONGO_ROOT_PASS}
      - DB_NAME=${DB_NAME}
      - COLLECTION_NAME=${COLLECTION_NAME}
    volumes:
     - ./data:/app/data
    command: python script/main.py
    depends_on:
     - mongo
  
  tests:
    build:
      context: .
      dockerfile: setup/Dockerfile.test
    container_name: healthcare_tests
    networks:
      - my_network
    environment:
      - MONGO_ROOT_USER=${MONGO_ROOT_USER}
      - MONGO_ROOT_PASS=${MONGO_ROOT_PASS}
      - DB_NAME=${DB_NAME}
      - COLLECTION_NAME=${COLLECTION_NAME}
    volumes:
      - ./data:/app/data
      - .:/app
    depends_on:
      - mongo

volumes:
  mongo_data:

networks:
  my_network:
    driver: bridge